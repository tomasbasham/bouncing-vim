###################################################
#                                                 #
#  Recommended for integration with bouncing-vim  #
#                                                 #
###################################################

# ==============================
# === Terminal compatibility ===
# ==============================
# Pass the keys through, especially necessary to make full use of native 
# vim keymappings.
# set-window-option -g xterm-keys on
set -g xterm-keys on

# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# increase scroll-back history
set -g history-limit 10000

# ========================
# === Secondary prefix ===
# ========================

# Set a prefix as the one in `screen`, however it's disabled by default 
# because if conflicts with Vim (increase number command).
# set-option -g prefix2 C-a

# ==========================
# === Full mouse support ===
# ==========================

# For tmux >= 2.1
set-option -g -q mouse on

# =======================================
# === Navigation between vim and tmux ===
# =======================================
#
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# http://sourceforge.net/mailarchive/message.php?msg_id=30519263
# M(eta) is the Alt key both in Vim and tmux.
bind -n M-Left  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Left)  || tmux select-pane -L; exit 0"
bind -n M-Down  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Down)  || tmux select-pane -D; exit 0"
bind -n M-Up    run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Up)    || tmux select-pane -U; exit 0"
bind -n M-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Right) || tmux select-pane -R; exit 0"

bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Left)  || tmux select-pane -L; exit 0"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Down)  || tmux select-pane -D; exit 0"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Up)    || tmux select-pane -U; exit 0"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-Right) || tmux select-pane -R; exit 0"

# =======================================
# === Quick switching between windows ===
# =======================================

# shift is swallowed by gnome-terminal
bind-key -n C-Space     select-window -t :+
bind-key -n M-PageDown  select-window -t :+
bind-key -n M-PageUp    select-window -t :-
bind ^b last-window # toggle last window like screen

###############################################################
######## END OF Recommended for integration with bouncing-vim #
###############################################################

# =======================
# === Vim keybindings ===
# =======================

# http://blog.sanctum.geek.nz/vi-mode-in-tmux/
# http://www.drbunsen.org/the-text-triumvirate/#tmux
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'r' rectangle-toggle
# bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'y' copy-pipe "xsel --clipboard --input"

# command not recognized in vi mode
# bind-key -t vi-copy 'p' paste-buffer
unbind p
bind p paste-buffer

# give 'v' to the user that still needs to go to the previous buffer
bind v previous-window

# ========================
# === Intuitive splits ===
# ========================
# unbind %
bind | split-window -h
# unbind '"'
bind - split-window -v

# ===================================
# === Allow faster key repetition ===
# ===================================
# decrease command delay (increases vim responsiveness)
# set -sg escape-time 1
set -sg escape-time 0
# if using normal keybindings this will allow to start working faster when 
# switched to a pane; the default is 500 ms
set -g repeat-time 300

# ==================
# === Status bar ===
# ==================

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 30

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-left-length 40
# set -g status-left '#[fg=green]#H'
set -g status-left '#[fg=green]#S#[fg=blue] #I:#P #[default]'

# show hostname, date, time, and battery in right status bar
set-option -g status-right '#[fg=green]#H#[default] %m/%d/%y %I:%M'

# [fg=red]#(battery discharging)#[default]#(battery charging)'

# ==================
# === Numbering  ===
# ==================
# Number windows from 1
set-option -g base-index 1
# Number panes from 1 - WARNING: this may conflict with the vimux plugin
# set-window-option -g pane-base-index 1
# highlight window when it has new activity
setw -g monitor-activity on
# re-number windows when one is closed
set -g renumber-windows on

source-file ~/.tmux.colours.conf
